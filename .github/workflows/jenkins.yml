name: Workflow for testing branches with Jenkins
on:
  push:
    branches:
      - 'release/**'
      - 'feature/**'
      - 'fix/**'
      - 'docs/**'
jobs:
    create_jenkins_branch:
      name: Creates jenkins/* branch if it does not exist
      runs-on: ubuntu-latest
      steps:
        - name: Fetch full history
          uses: actions/checkout@v2
          with:
            fetch-depth: 0
        - name: Get current branch name
          run: echo "BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD | cut -d '/' -f1-2)" >> $GITHUB_ENV
        - name: Find out if jenkins/${{ env.BRANCH_NAME }} exists
          run: echo "BRANCH_EXISTS=$(git branch -r | grep jenkins/${{ env.BRANCH_NAME }})" >> $GITHUB_ENV
        - name: Create jenkins/${{ env.BRANCH_NAME }}
          uses: peterjgrainger/action-create-branch@v1.0.0
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            branch: jenkins/${{ env.BRANCH_NAME }}
          if: "!env.BRANCH_EXISTS"
        - name: Fetch new jenkins/${{ env.BRANCH_NAME }}
          uses: actions/checkout@v2
          with:
            ref: jenkins/${{ env.BRANCH_NAME }}
        - name: Update JePL branch content in jenkins/${{ env.BRANCH_NAME }}
          run: |
            git config user.name github-actions
            git config user.email github-actions@github.com
            git checkout jenkins/${{ env.BRANCH_NAME }}
            git reset --hard origin/${{ env.BRANCH_NAME }}
            git checkout origin/JePL .sqa/config.yml .sqa/docker-compose.yml Jenkinsfile .git_credential_helper.sh
            printf "`cat Jenkinsfile`" "${{ env.BRANCH_NAME }}" > Jenkinsfile
            git add Jenkinsfile
            git status
            git diff-index --quiet HEAD || (git commit -m "Added JePL configuration files" && git push -f)
